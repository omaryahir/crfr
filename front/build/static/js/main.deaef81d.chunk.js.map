{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","className","to","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","Landing","Login","state","email","password","onChange","onSubmit","setState","target","name","value","user","axios","post","auth","username","then","res","setItem","data","catch","err","console","log","login","error","noValidate","htmlFor","placeholder","first_name","last_name","newUser","register","Profile","errors","token","decoded","jwt_decode","identity","App","exact","path","component","Register","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"iQAGMA,E,+KAEKC,GACHA,EAAEC,iBACFC,aAAaC,WAAW,aACxBC,KAAKC,MAAMC,QAAQC,KAAnB,O,+BAIA,IAAMC,EACH,wBAAIC,UAAU,cACT,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,UAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,cAKNC,EACF,wBAAIF,UAAU,cACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,YAA9B,SAEJ,wBAAID,UAAU,YACV,uBAAGG,KAAK,GAAGC,QAAST,KAAKU,OAAOC,KAAKX,MAAOK,UAAU,YAAtD,YAKZ,OACI,yBAAKA,UAAU,oDACX,4BAAQA,UAAU,iBACVO,KAAK,SACLC,cAAY,WACZC,cAAY,WACZC,gBAAc,UACdC,gBAAc,QACdC,aAAW,qBACf,0BAAMZ,UAAU,yBAGpB,yBAAKA,UAAU,qDAAqDa,GAAG,WACnE,wBAAIb,UAAU,cACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,UAKPP,aAAaqB,UAAYZ,EAAWH,Q,GAnDpCgB,aA2DNC,cAAW1B,GC9CX2B,E,iLAZP,OACI,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,eAAd,kB,GANEe,a,iCCsEPG,E,YApEX,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTC,MAAO,GACPC,SAAU,IAGd,EAAKC,SAAW,EAAKA,SAAShB,KAAd,gBAChB,EAAKiB,SAAW,EAAKA,SAASjB,KAAd,gBARN,E,sEAWLf,GACLI,KAAK6B,SAAL,eAAgBjC,EAAEkC,OAAOC,KAAOnC,EAAEkC,OAAOE,U,+BAGpCpC,GAAG,IAAD,OACPA,EAAEC,iBCHW,SAAAoC,GACjB,OAAOC,IACNC,KAAK,sBAAuB,CACzBC,KAAM,CACFC,SAAUJ,EAAKR,MACfC,SAAUO,EAAKP,YAKtBY,MAAM,SAAAC,GAEH,OADAzC,aAAa0C,QAAQ,YAAaD,EAAIE,MAC/BF,EAAIE,QAEdC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,MDNZG,CALa,CACTrB,MAAOzB,KAAKwB,MAAMC,MAClBC,SAAU1B,KAAKwB,MAAME,WAGbY,MAAK,SAAAC,GACRA,EAAIQ,OACL,EAAK9C,MAAMC,QAAQC,KAAnB,iB,+BAMR,OACI,yBAAKE,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,0BAAM2C,YAAU,EAACpB,SAAU5B,KAAK4B,UAC5B,wBAAIvB,UAAU,8BAAd,kBAEA,yBAAKA,UAAU,cACX,2BAAO4C,QAAQ,SAAf,iBACA,2BAAQrC,KAAK,QACLP,UAAU,eACV0B,KAAK,QACLmB,YAAY,cACZlB,MAAOhC,KAAKwB,MAAMC,MAClBE,SAAU3B,KAAK2B,YAI3B,yBAAKtB,UAAU,cACX,2BAAO4C,QAAQ,SAAf,YACA,2BAAQrC,KAAK,WACLP,UAAU,eACV0B,KAAK,WACLmB,YAAY,iBACZlB,MAAOhC,KAAKwB,MAAME,SAClBC,SAAU3B,KAAK2B,YAI3B,4BAAQf,KAAK,SAASP,UAAU,oCAAhC,mB,GA5DRe,aE6FLG,E,YA5FX,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACT2B,WAAY,GACZC,UAAW,GACX3B,MAAO,GACPC,SAAU,IAGd,EAAKC,SAAW,EAAKA,SAAShB,KAAd,gBAChB,EAAKiB,SAAW,EAAKA,SAASjB,KAAd,gBAVN,E,sEAaLf,GACLI,KAAK6B,SAAL,eAAgBjC,EAAEkC,OAAOC,KAAOnC,EAAEkC,OAAOE,U,+BAGpCpC,GAAG,IAAD,OACPA,EAAEC,iBDnBc,SAAAwD,GACpB,OAAOnB,IACNC,KAAK,yBAA0B,CAC5BgB,WAAYE,EAAQF,WACpBC,UAAWC,EAAQD,UACnBf,SAAUgB,EAAQ5B,MAClBC,SAAU2B,EAAQ3B,WAErBY,MAAK,SAAAC,GACFK,QAAQC,IAAIN,MCkBZe,CAPgB,CACZH,WAAYnD,KAAKwB,MAAM2B,WACvBC,UAAWpD,KAAKwB,MAAM4B,UACtB3B,MAAOzB,KAAKwB,MAAMC,MAClBC,SAAU1B,KAAKwB,MAAME,WAGPY,MAAK,SAAAC,GACnB,EAAKtC,MAAMC,QAAQC,KAAnB,e,+BAKJ,OACI,yBAAKE,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,0BAAM2C,YAAU,EAACpB,SAAU5B,KAAK4B,UAC5B,wBAAIvB,UAAU,8BAAd,YAEA,yBAAKA,UAAU,cACX,2BAAO4C,QAAQ,cAAf,cACA,2BAAQrC,KAAK,OACLP,UAAU,eACV0B,KAAK,aACLmB,YAAY,mBACZlB,MAAOhC,KAAKwB,MAAM2B,WAClBxB,SAAU3B,KAAK2B,YAI3B,yBAAKtB,UAAU,cACX,2BAAO4C,QAAQ,aAAf,aACA,2BAAQrC,KAAK,YACLP,UAAU,eACV0B,KAAK,YACLmB,YAAY,kBACZlB,MAAOhC,KAAKwB,MAAM4B,UAClBzB,SAAU3B,KAAK2B,YAI3B,yBAAKtB,UAAU,cACX,2BAAO4C,QAAQ,SAAf,iBACA,2BAAQrC,KAAK,QACLP,UAAU,eACV0B,KAAK,QACLmB,YAAY,cACZlB,MAAOhC,KAAKwB,MAAMC,MAClBE,SAAU3B,KAAK2B,YAI3B,yBAAKtB,UAAU,cACX,2BAAO4C,QAAQ,SAAf,YACA,2BAAQrC,KAAK,WACLP,UAAU,eACV0B,KAAK,WACLmB,YAAY,iBACZlB,MAAOhC,KAAKwB,MAAME,SAClBC,SAAU3B,KAAK2B,YAI3B,4BAAQf,KAAK,SAASP,UAAU,oCAAhC,oB,GApFRe,a,iBCsDLmC,E,YArDX,aAAgB,IAAD,8BACX,+CACK/B,MAAQ,CACT2B,WAAY,GACZC,UAAW,GACX3B,MAAO,GACP+B,OAAQ,IAND,E,iFAWX,IAAMC,EAAQ3D,aAAaqB,UAC3ByB,QAAQC,IAAIY,GACZ,IAAMC,EAAUC,IAAWF,GAC3Bb,QAAQC,IAAI,WACZD,QAAQC,IAAIa,GACZ1D,KAAK6B,SAAS,CACVsB,WAAYO,EAAQE,SAAST,WAC7BC,UAAWM,EAAQE,SAASR,UAC5B3B,MAAOiC,EAAQE,SAASnC,QAE5BmB,QAAQC,IAAI,W,+BAIZ,OACI,yBAAKxC,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eAAd,YAEJ,2BAAOA,UAAU,0BACb,+BACI,4BACI,0CACA,4BAAKL,KAAKwB,MAAM2B,aAEpB,4BACI,yCACA,4BAAKnD,KAAKwB,MAAM4B,YAEpB,4BACI,qCACA,4BAAKpD,KAAKwB,MAAMC,gB,GA5C1BL,aCuBPyC,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKxD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,yBAAKjB,UAAU,aACX,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,YAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWzC,IACtC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,WAAWC,UAAWT,QCPhCW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdrC,OAAM,SAAAK,GACLH,QAAQG,MAAMA,EAAMiC,c","file":"static/js/main.deaef81d.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\n\nclass Navbar extends Component {\n\n    logOut(e) {\n        e.preventDefault()\n        localStorage.removeItem('usertoken')\n        this.props.history.push(`/`)\n    }\n\n    render() {\n        const loginRegLink = (\n           <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                </li>\n            </ul>\n        )\n\n        const userLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/profile\">User</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">LogOut</a>\n                </li>\n            </ul>\n        )\n\n        return (\n            <nav className=\"navbar nav-expand-lg navbar-dark bg-dark rounded\">\n                <button className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#navbar1\"\n                        aria-controls=\"navbar1\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                Home\n                            </Link>\n                        </li>\n                    </ul>\n                    {localStorage.usertoken ? userLink : loginRegLink}\n                </div>\n\n            </nav>\n        ) \n    }\n}\n\nexport default withRouter(Navbar)\n\n\n\n","import React, {Component} from 'react'\n\nclass Landing extends Component {\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                <div className=\"col-sm-8 mx-auto\">\n                    <h1 className=\"text-center\">WELCOME</h1>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Landing \n","import React, { Component } from 'react'\nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault() \n        const user = {\n            email: this.state.email, \n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if (!res.error) {\n                this.props.history.push(`/profile`)\n            }\n        }) \n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input  type=\"email\" \n                                        className=\"form-control\" \n                                        name=\"email\" \n                                        placeholder=\"Enter email\" \n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Password</label>\n                                <input  type=\"password\" \n                                        className=\"form-control\" \n                                        name=\"password\" \n                                        placeholder=\"Enter Password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Sign in</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        ) \n    }\n}\n\nexport default Login\n\n","\nimport axios from 'axios'\n\nexport const register = newUser => {\n    return axios\n    .post('/api_v1/users/register', {\n        first_name: newUser.first_name,\n        last_name: newUser.last_name, \n        username: newUser.email, \n        password: newUser.password\n    })\n    .then(res => {\n        console.log(res)\n    })\n\n}\n\nexport const login = user => {\n    return axios \n    .post('/api_v1/users/login', {\n        auth: {\n            username: user.email,\n            password: user.password\n        }\n        /*username: user.email,\n        password: user.password*/\n    })\n    .then (res => {\n        localStorage.setItem('usertoken', res.data)\n        return res.data\n    })\n    .catch (err => {\n        console.log(err)\n    })\n}\n","import React, { Component } from 'react'\nimport { register } from './UserFunctions'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault() \n        const newUser = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email, \n            password: this.state.password\n        }\n\n        register(newUser).then(res => {\n            this.props.history.push(`/login`)\n        }) \n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"first_name\">First Name</label>\n                                <input  type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"first_name\" \n                                        placeholder=\"Enter First Name\" \n                                        value={this.state.first_name}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"last_name\">Last Name</label>\n                                <input  type=\"last_name\" \n                                        className=\"form-control\" \n                                        name=\"last_name\" \n                                        placeholder=\"Enter last name\" \n                                        value={this.state.last_name}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n \n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input  type=\"email\" \n                                        className=\"form-control\" \n                                        name=\"email\" \n                                        placeholder=\"Enter email\" \n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Password</label>\n                                <input  type=\"password\" \n                                        className=\"form-control\" \n                                        name=\"password\" \n                                        placeholder=\"Enter Password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Register</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        ) \n    }\n}\n\nexport default Login\n\n","import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\n\nclass Profile extends Component {\n    constructor () {\n        super () \n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            errors: {}\n        }\n    }\n\n    componentDidMount(){\n        const token = localStorage.usertoken\n        console.log(token)\n        const decoded = jwt_decode(token)\n        console.log('DECODED')\n        console.log(decoded)\n        this.setState({\n            first_name: decoded.identity.first_name,\n            last_name: decoded.identity.last_name, \n            email: decoded.identity.email\n        })\n        console.log('STATE')\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mt-5\">\n                        <h1 className=\"text-center\">PROFILE</h1>\n                    </div>\n                    <table className=\"table col-md-6 mx-auto\">\n                        <tbody>\n                            <tr>\n                                <td>First Name</td>\n                                <td>{this.state.first_name}</td>\n                            </tr>\n                            <tr>\n                                <td>Last Name</td>\n                                <td>{this.state.last_name}</td>\n                            </tr>                    \n                            <tr>\n                                <td>Email</td>\n                                <td>{this.state.email}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Route exact path=\"/\" component={Landing} />\n        <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} /> \n        </div> \n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}