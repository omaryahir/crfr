version: '3.1'    

networks:
  fr-net-frontend:
  fr-net-backend:

services:

  fr_backend:
    restart: always
    networks:
      - fr-net-backend
    build: ../back
    expose:
      - "8000"
    links:
      - fr_auth_db
    volumes:
      - .:/back
      - web-data:/usr/src/app/static
    env_file:
      - .env
    #command: "gunicorn -w 2 -b :8000 app:app"
    #command: 
    #  - "source env/bin/activate"
    #  - "gunicorn -w 2 -b :8000 app:app"
    #command: "ls -l"

  nginx:
    networks:
      - fr-net-backend    
    restart: always
    build: ./nginx 
    ports:
      - "${BACKEND_PORT}:80"
    volumes:
      - .:/www/static
      - web-data:/usr/src/app/static
    links:
      - fr_backend:fr_backend
    

  fr_auth_db:
    image: postgres:12.2    
    environment:
      POSTGRES_DB: "fr_auth_db"
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - fr-net-backend
    restart: on-failure
    volumes:
      - ../db/postgres-data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql 

volumes:
  postgres-data:
  web-data:
